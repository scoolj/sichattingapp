"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

/**
 * Manage api calls for personalization
 * The collection object contains convenience functions such as  get, post, delete
 * @class Personalization
 */
var Personalization = /*#__PURE__*/function () {
  function Personalization(client) {
    (0, _classCallCheck2.default)(this, Personalization);

    /**
     * Initialize the Personalization class
     *
     * @method constructor
     * @memberof Personalization.prototype
     * @param {StreamClient} client - The stream client
     */
    this.client = client;
  }

  (0, _createClass2.default)(Personalization, [{
    key: "get",
    value: function get(resource) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      /**
       * Get personalized activities for this feed
       *
       * @method get
       * @memberof Personalization.prototype
       * @param {object} resource - personalized resource endpoint i.e "follow_recommendations"
       * @param {object} options  Additional options
       * @return {Promise} Promise object. Personalized feed
       * @example client.personalization.get('follow_recommendations', {foo: 'bar', baz: 'qux'})
       */
      return this.client.get({
        url: "".concat(resource, "/"),
        serviceName: 'personalization',
        qs: options,
        signature: options.token || this.client.getPersonalizationToken()
      });
    }
  }, {
    key: "post",
    value: function post(resource) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      /**
       * Post data to personalization endpoint
       *
       * @method post
       * @memberof Personalization.prototype
       * @param {object} resource - personalized resource endpoint i.e "follow_recommendations"
       * @param {object} options - Additional options
       * @param {object} data - Data to send in the payload
       * @return {Promise} Promise object. Data that was posted if successful, or an error.
       * @example client.personalization.post('follow_recommendations', {foo: 'bar', baz: 'qux'})
       */
      return this.client.post({
        url: "".concat(resource, "/"),
        serviceName: 'personalization',
        qs: options,
        body: data,
        signature: this.client.getPersonalizationToken()
      });
    }
  }, {
    key: "delete",
    value: function _delete(resource) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      /**
       * Delete metadata or activities
       *
       * @method delete
       * @memberof Personalization.prototype
       * @param {object} resource - personalized resource endpoint i.e "follow_recommendations"
       * @param {object} options - Additional options
       * @return {Promise} Promise object. Data that was deleted if successful, or an error.
       * @example client.personalization.delete('follow_recommendations', {foo: 'bar', baz: 'qux'})
       */
      return this.client.delete({
        url: "".concat(resource, "/"),
        serviceName: 'personalization',
        qs: options,
        signature: this.client.getPersonalizationToken()
      });
    }
  }]);
  return Personalization;
}();

exports.default = Personalization;